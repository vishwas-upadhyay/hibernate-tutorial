package com.vishwas.learning.hibernate.tutorial.C_inheritance;

import javax.persistence.*;

@Entity
@Inheritance (strategy = InheritanceType.TABLE_PER_CLASS)
//@DiscriminatorColumn (name="VEHICLE_TYPE",discriminatorType = DiscriminatorType.STRING)
// This tutorial is focusing on C_inheritance handled by hibernate.
// if we don't set @Inheritance and @DiscriminatorColumn annotation then also hibernate use same
// config by default but to set DTYPE (default column name generated by) column name in VehicleInheritance table as VEHICLE_TYPE we have used here.

// InheritanceType.TABLE_PER_CLASS : This will create 3 separate table for each entity without any relationship.
// @DiscriminatorColumn and @DiscriminatorValue not applicable in this strategy.
// Hibernate: insert into VehicleInheritance (name, id) values (?, ?)
//Hibernate: insert into TwoWheeler (name, steeringHandle, id) values (?, ?, ?)
//Hibernate: insert into FourWheeler (name, steeringWheel, id) values (?, ?, ?)

// InheritanceType.JOINED : This will create also create 3 tables but VehicleInheritance id column would be work as FK in TwoWheeler,FourWheeler table
// @DiscriminatorColumn and @DiscriminatorValue not applicable in this strategy.
//        Hibernate: insert into VehicleInheritance (name, id) values (?, ?)
//        Hibernate: insert into VehicleInheritance (name, id) values (?, ?)
//        Hibernate: insert into VehicleInheritance (name, id) values (?, ?)
//        Hibernate: insert into TwoWheeler (steeringHandle, id) values (?, ?)
//        Hibernate: insert into FourWheeler (steeringWheel, id) values (?, ?)

public class VehicleInheritance {

    @Id
    private int id;
    private String name;

    public int getId() {
        return id;
    }

    public void setId(int id) {
        this.id = id;
    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }
}
